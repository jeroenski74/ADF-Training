{
   "$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "serverName":{
         "type":"string",
         "defaultValue":"[concat('sql-',uniqueString('sql', resourceGroup().id))]",
         "metadata":{
            "description":"The name of the SQL logical server."
         }
      },
      "sourceDBName":{
         "type":"string",
         "defaultValue":"[concat('sqldb-source-',uniqueString('sqldb-source', resourceGroup().id))]",
         "metadata":{
            "description":"The name of the SQL Database."
         }
      },
      "targetDBName":{
         "type":"string",
         "defaultValue":"[concat('sqldb-target-',uniqueString('sqldb-target', resourceGroup().id))]",
         "metadata":{
            "description":"The name of the SQL Database."
         }
      },
      "location":{
         "type":"string",
         "defaultValue":"[resourceGroup().location]",
         "metadata":{
            "description":"Location for all resources."
         }
      },
      "administratorLogin":{
         "type":"string",
         "defaultValue":"sqladmin",
         "metadata":{
            "description":"The administrator username of the SQL logical server."
         }
      },
      "administratorLoginPassword":{
         "type":"securestring",
         "defaultValue":"Welkom12345!",
         "metadata":{
            "description":"The administrator password of the SQL logical server."
         }
      },
      "storageAccountName":{
         "type":"string",
         "defaultValue":"[concat('st',uniqueString('st', resourceGroup().id))]",
         "metadata":{
            "description":"Specifies the name of the Azure Storage account."
         }
      },
      "containerName":{
         "type":"string",
         "defaultValue":"data",
         "metadata":{
            "description":"Specifies the name of the blob container."
         }
      },
      "dataFactoryName":{
         "type":"string",
         "defaultValue":"[concat('adf-',uniqueString('adf', resourceGroup().id))]",
         "metadata":{
            "description":"Specifies the name of the Azure Data Factory."
         }
      },
       "linkedDataFactoryName":{
         "type":"string",
         "defaultValue":"[concat('adf-linked-',uniqueString('adf-linked', resourceGroup().id))]",
         "metadata":{
            "description":"Specifies the name of the Linked Azure Data Factory."
         }
      },
      "keyVaultName":{
         "type":"string",
         "defaultValue":"[concat('kv-',uniqueString('kv', resourceGroup().id))]",
         "metadata":{
            "description":"Specifies the name of the key vault."
         }
      },
      "virtualMachineName": {
            "type": "string",
            "defaultValue":"[concat('vm-',uniqueString('vm', resourceGroup().id))]",
            "metadata":{
                "description":"The name of the Virtual Machine."
            }
        },
        "networkInterfaceName": {
            "type": "string",
            "defaultValue":"[concat('nic-',uniqueString('nic', resourceGroup().id))]",
            "metadata":{
                "description":"The name of the Network Interface Card."
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue":"[concat('vnet-',uniqueString('vnet', resourceGroup().id))]",
            "metadata":{
                "description":"The name of the Virtual Network."
            }
        },
        "networkSecurityGroupName": {
            "type": "string",
            "defaultValue":"[concat('nsg-',uniqueString('nsg', resourceGroup().id))]",
            "metadata":{
                "description":"The name of the Network Security Group."
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue":"[concat('sn-',uniqueString('sn', resourceGroup().id))]",
            "metadata":{
                "description":"The name of the Subnet."
            }
        },
        "publicIpAddressName": {
            "type": "string",
            "defaultValue":"[concat('pip-',uniqueString('pip', resourceGroup().id))]",
            "metadata":{
                "description":"The name of the Public IP Address."
            }
        },
        "roleDefinitionId": {
         "type": "string",
         "defaultValue": "b24988ac-6180-42a0-ab88-20f7382dd24c",
         "metadata": {
        "description": "roleDefinition for the assignment - default is contributor"
      }
    }
   },
   "variables":{
        "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
        "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]"
   },
   "resources":[
      {
         "type":"Microsoft.Sql/servers",
         "apiVersion":"2020-02-02-preview",
         "name":"[parameters('serverName')]",
         "location":"[parameters('location')]",
         "properties":{
            "administratorLogin":"[parameters('administratorLogin')]",
            "administratorLoginPassword":"[parameters('administratorLoginPassword')]"
         },
         "resources":[
            {
               "type":"databases",
               "apiVersion":"2020-08-01-preview",
               "name":"[parameters('sourceDBName')]",
               "location":"[parameters('location')]",
               "properties":{
                  "sampleName":"AdventureWorksLT"
               },
               "sku":{
                  "name":"Standard",
                  "tier":"Standard"
               },
               "dependsOn":[
                  "[resourceId('Microsoft.Sql/servers', concat(parameters('serverName')))]"
               ]
            },
            {
               "type":"databases",
               "apiVersion":"2020-08-01-preview",
               "name":"[parameters('targetDBName')]",
               "location":"[parameters('location')]",
               "properties":{},
               "sku":{
                  "name":"Standard",
                  "tier":"Standard"
               },
               "dependsOn":[
                  "[resourceId('Microsoft.Sql/servers', concat(parameters('serverName')))]"
               ]
            }
         ]
      },
      {
         "type":"Microsoft.Sql/servers/firewallRules",
         "apiVersion":"2021-02-01-preview",
         "name":"[concat(parameters('serverName'), '/AllowAllIps')]",
         "dependsOn":[
            "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]"
         ],
         "properties":{
            "startIpAddress":"0.0.0.0",
            "endIpAddress":"255.255.255.255"
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts",
         "apiVersion":"2021-04-01",
         "name":"[parameters('storageAccountName')]",
         "location":"[parameters('location')]",
         "sku":{
            "name":"Standard_LRS"
         },
         "kind":"StorageV2",
         "properties":{
            "accessTier":"Hot"
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2021-04-01",
         "name":"[format('{0}/default/{1}', parameters('storageAccountName'), parameters('containerName'))]",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
         ]
      },
      {
         "type":"Microsoft.DataFactory/factories",
         "apiVersion":"2018-06-01",
         "name":"[parameters('dataFactoryName')]",
         "location":"[parameters('location')]",
         "properties":{},
         "identity":{
            "type":"SystemAssigned"
         }
      },
      {
         "type":"Microsoft.DataFactory/factories",
         "apiVersion":"2018-06-01",
         "name":"[parameters('linkedDataFactoryName')]",
         "location":"[parameters('location')]",
         "properties":{},
         "identity":{
            "type":"SystemAssigned"
         }
      },
         {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[guid(parameters('roleDefinitionId'))]",
            "scope": "[concat('Microsoft.DataFactory/factories', '/', parameters('linkedDataFactoryName'))]",
            "dependsOn": [
               "[resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName'))]",
               "[resourceId('Microsoft.DataFactory/factories', parameters('linkedDataFactoryName'))]"
               ],
            "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]",
                "principalId": "[reference(resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName')),'2018-06-01', 'full').identity.principalId]"
            }
        },
      {
         "type":"Microsoft.KeyVault/vaults",
         "apiVersion":"2021-04-01-preview",
         "name":"[parameters('keyVaultName')]",
         "location":"[parameters('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName'))]",
            "[resourceId('Microsoft.DataFactory/factories', parameters('linkedDataFactoryName'))]"
         ],
         "properties":{
            "tenantId":"[subscription().tenantId]",
            "enableSoftDelete": false,           
            "accessPolicies":[
               {
                  "objectId":"[reference(resourceId('Microsoft.DataFactory/factories', parameters('dataFactoryName')),'2018-06-01', 'full').identity.principalId]",
                  "tenantId":"[subscription().tenantId]",
                  "permissions":{
                     "secrets":[
                        "list",
                        "get"
                     ]
                  }
               },
               {
                  "objectId":"[reference(resourceId('Microsoft.DataFactory/factories', parameters('linkedDataFactoryName')),'2018-06-01', 'full').identity.principalId]",
                  "tenantId":"[subscription().tenantId]",
                  "permissions":{
                     "secrets":[
                        "list",
                        "get"
                     ]
                  }
               }
            ],
            "sku":{
               "name":"standard",
               "family":"A"
            },
            "networkAcls":{
               "defaultAction":"Allow",
               "bypass":"AzureServices"
            }
         }
      },
      {
         "type":"Microsoft.KeyVault/vaults/secrets",
         "apiVersion":"2021-04-01-preview",
         "name":"[format('{0}/{1}', parameters('keyVaultName'), parameters('administratorLogin'))]",
         "properties":{
            "value":"[parameters('administratorLoginPassword')]"
         },
         "dependsOn":[
            "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
         ]
      },
      {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkInterfaceName')]",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.0.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": true,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            },
            "dependsOn":[
            "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
            "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
         ]
        },
        {
            "name": "[parameters('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                {
                            "name": "RDP",
                            "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                 "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "name": "[parameters('publicIpAddressName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2019-02-01",
            "location": "[parameters('location')]",
            "properties": {
                "publicIpAllocationMethod": "Static"
            },
            "sku": {
                "name": "Basic"
            }
        },
        {
            "name": "[parameters('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-03-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2s_v3"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "imageReference": {
                        "publisher": "MicrosoftWindowsDesktop",
                        "offer": "Windows-10",
                        "sku": "20h2-pro-g2",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "os-vm",
                    "adminUsername": "[parameters('administratorLogin')]",
                    "adminPassword": "[parameters('administratorLoginPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true
                    }
                },
                "licenseType": "Windows_Client",
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            },
            "identity": {
                "type": "systemAssigned"
            }
            
        },
        {
            "name": "[concat('shutdown-computevm-', parameters('virtualMachineName'))]",
            "type": "Microsoft.DevTestLab/schedules",
            "apiVersion": "2018-09-15",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
            ],
            "properties": {
                "status": "Enabled",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "1800"
                },
                "timeZoneId": "W. Europe Standard Time",
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
            }
        }
   ]
}